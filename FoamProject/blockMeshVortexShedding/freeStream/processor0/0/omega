/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2206                                  |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    arch        "LSB;label=32;scalar=64";
    class       volScalarField;
    location    "0";
    object      omega;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform 30.685;

boundaryField
{
    inlet
    {
        type            turbulentMixingLengthFrequencyInlet;
        mixingLength    0.0056;
        phi             phi;
        k               k;
        value           nonuniform List<scalar> 0();
    }
    outlet
    {
        type            zeroGradient;
    }
    topWall
    {
        type            zeroGradient;
    }
    lowerWall
    {
        type            zeroGradient;
    }
    leadingEdge
    {
        type            omegaWallFunction;
        blending        binomial;
        n               2;
        value           nonuniform List<scalar> 0();
    }
    trailingEdge
    {
        type            omegaWallFunction;
        blending        binomial;
        n               2;
        value           nonuniform List<scalar> 0();
    }
    upperSurface
    {
        type            omegaWallFunction;
        blending        binomial;
        n               2;
        value           uniform 30.685;
    }
    lowerSurface
    {
        type            omegaWallFunction;
        blending        binomial;
        n               2;
        value           nonuniform List<scalar> 0();
    }
    frontAndBack
    {
        type            empty;
    }
    procBoundary0to1
    {
        type            processor;
        value           uniform 30.685;
    }
    procBoundary0to2
    {
        type            processor;
        value           uniform 30.685;
    }
    procBoundary0to3
    {
        type            processor;
        value           uniform 30.685;
    }
    procBoundary0to4
    {
        type            processor;
        value           uniform 30.685;
    }
}


// ************************************************************************* //
